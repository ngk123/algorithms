#include<stdio.h>
#include<stdlib.h>

int read()
{
  char c = 0;
  int input = 0;
  while(c < 33)
    c = getchar_unlocked();
  while(c > 33)
    {
      input = input*10+c-'0';
      c = getchar_unlocked();
    }
  return input;
}


typedef struct comp
{
  int st;
  int end;
  int compno;
  int flag;
}comp;




int cmpfunc (const void * e, const void * f)
{
  
  return (  (*(comp*)e).end- (*(comp*)f).end );
}

int main()
{
  int T,N,K,l,m,o,ans,i,j,temp,maxend,s,k,count;
  comp og[100006],process[100006];
  //  scanf("%d",&T);
  T=read();
  printf("T:%d",T);
  while(T--)
    {
      N=read();
      K=read();
      k=1;
      ans=0;
      count=0;
      while(1)
	{
	  s=0;
	  if(count!=0){ og[0].st=og[s].st;og[0].end=og[s].end;og[0].compno=og[s].compno;og[0].flag=og[s].flag;s=1;}
	  while(1)
	    {
	      og[s].st=read();og[s].end=read();og[s].compno=read();
	      og[s].flag=1;
	      if(og[s].compno>k){k++;break;}
	      s++;
	      count++;
	      if(count==N)break;
	    }
	 
	  
	  temp=0;
	  
	  l=0;
	  temp=j;
	  qsort(og,s,sizeof(comp),cmpfunc);
	  // printf(  "l=%d\n",l);
	  m=0;

	  maxend=-1;
	  for(m=0; m<s;m++)
	    {
	      if(og[m].st>=maxend){ans+=1;maxend=og[m].end;}

	    }


	  if(count==N)break;
	  // printf("anstemp:%d\n",ans);
	}
      printf("%d\n",ans);
    }
  
  return 0;
}
